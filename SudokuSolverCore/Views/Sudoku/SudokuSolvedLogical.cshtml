@model Shared.Models.SudokuModel

<style>
    .buttonContainer {
        display: flex;
    }

    td {
        border-right: solid 1px #808080;
        border-left: solid 1px #808080;
    }
</style>
<div class="gameContainer">
    @using (Html.BeginForm("Sudoku", "Sudoku"))
    {
<div class="sudokuSidebar">
    @*<label id="solveLabel">@Model.Alert</label>*@
    <div class="clearfix"></div>
    <div class="buttonContainer">

        <button class="btn btn-info m-2" type="submit">Return to original state</button>
        <div class="clearfix"></div>
        <button class="btn btn-info m-2" type="submit" formaction="Sudoku/SolveGuessing">Solve Guessing</button>
        <div class="clearfix"></div>
        <button class="btn btn-info m-2" type="submit" formaction="Sudoku/CreateSudoku">Create Random</button>
        <div class="clearfix"></div>

    </div>
</div>
                <div class="sudokuMainContainer" id="board">
                    <table class="table table-dark rounded border">
                        @for (int i = 0; i < 9; i++)
                        {
        <tr class="sudokuRow">
            @for (int j = 0; j < 9; j++)
            {
<td>
    @Model.Sudoku[i][j].value
    @*@Html.TextBoxFor(m => m.Sudoku[i][j].value, new { @class = "cell", @type = "number", @min = "0", @max = "9", @name = (i.ToString() + j.ToString()), @tag = Model.Sudoku[i][j].value, @onchange = "ValidateInput(this)", @readonly = "true" })*@
</td>
}
        </tr>
   }
                    </table>
                    <p></p>
                </div>}
</div>